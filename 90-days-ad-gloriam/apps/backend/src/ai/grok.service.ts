import { Injectable, HttpService } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';

@Injectable()
export class GrokService {
  private apiKey: string;
  private apiUrl: string = 'https://api.grok.xai.com/v1/chat/completions';  // Example endpoint for Grok-4

  constructor(private httpService: HttpService, private configService: ConfigService) {
    this.apiKey = this.configService.get('GROK_API_KEY');
  }

  async generateReflection(prompt: string): Promise<string> {
    // Ethical check: Basic bias auditing by filtering sensitive topics
    if (this.hasBiasRisk(prompt)) {
      throw new Error('Prompt contains potential bias risks; review required.');
    }

    const response = await this.httpService.post(this.apiUrl, {
      model: 'grok-4',
      messages: [{ role: 'user', content: prompt }],
      max_tokens: 500,
    }, {
      headers: {
        'Authorization': `Bearer ${this.apiKey}`,
        'Content-Type': 'application/json',
      },
    }).toPromise();

    const reflection = response.data.choices[0].message.content;
    // EU AI Act compliance: Add metadata for transparency
    return `Reflection: ${reflection}\n\nAI Transparency: Generated by Grok-4 with standard ethical filters applied.`;
  }

  private hasBiasRisk(prompt: string): boolean {
    const riskyKeywords = ['discriminatory', 'biased', 'hate'];  // Example check
    return riskyKeywords.some(keyword => prompt.toLowerCase().includes(keyword));
  }
}
