generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  paths     UserPath[]
  journals  Journal[]
  services  Service[]
}

model UserPath {
  id          String   @id @default(uuid())
  userId      String
  pathId      String
  progress    Int      @default(0)
  startedAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  path        Path     @relation(fields: [pathId], references: [id])
  @@unique([userId, pathId])
}

model Path {
  id          String     @id @default(uuid())
  name        String
  description String
  stones      Int        @default(90)
  createdAt   DateTime   @default(now())
  users       UserPath[]
}

model Journal {
  id        String   @id @default(uuid())
  userId    String
  content   String
  date      DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id          String   @id @default(uuid())
  userId      String
  description String
  hours       Float
  date        DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model Waypoint {
  id       String          @id @default(uuid())
  name     String
  location Unsupported("geometry")
  needs    VolunteerNeed[]
  createdAt DateTime       @default(now())
}

model VolunteerNeed {
  id         String   @id @default(uuid())
  waypointId String
  title      String
  description String
  waypoint   Waypoint @relation(fields: [waypointId], references: [id])
  createdAt  DateTime @default(now())
}
